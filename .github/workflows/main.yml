name: Renew Azure App Client Secret

on:
  schedule:
    - cron: '0 0 1 */3 *' # Runs every 3 months on the 1st day at midnight
  workflow_dispatch: # Allows manual trigger

permissions: 
  id-token: write  # Grants permission to create a token for OIDC
  contents: read   # Minimum permission needed to fetch the repository

jobs:
  renew-client-secret:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        allow-no-subscriptions: true


    - name: Generate a new client secret
      id: new-secret
      run: |
        # Set variables
        APP_ID=${{ secrets.APP_REGISTRATION_ID }}
        SECRET_NAME="my-app-secret"
        EXPIRES_ON=$(date -u -d "90 days" +"%Y-%m-%dT%H:%M:%SZ")

        # Generate new client secret
        NEW_SECRET=$(az ad app credential reset \
          --id $APP_ID \
          --display-name $SECRET_NAME \
          --end-date $EXPIRES_ON \
          --query password -o tsv)

        # Output the new secret
        echo "::set-output name=secret::${NEW_SECRET}"

    - name: Store the secret in Key Vault
      run: |
        # Set variables
        VAULT_NAME=${{ secrets.KEY_VAULT_NAME }}
        SECRET_NAME="my-app-secret"

        # Store the secret
        az keyvault secret set \
          --vault-name $VAULT_NAME \
          --name $SECRET_NAME \
          --value "${{ steps.new-secret.outputs.secret }}"

    - name: Verify secret in Key Vault
      run: |
        az keyvault secret show --vault-name ${{ secrets.KEY_VAULT_NAME }} --name my-app-secret
